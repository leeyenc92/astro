---
import ReactIcon from "@/helpers/ReactIcons.astro";
import { useTranslations } from "@/lib/utils/languageParser.ts";
import fetchApi from "@/lib/utils/fetchApi";
import type { StrapiResponse, Category } from "@/types";

interface Props {
  class?: string;
}

const { data } = await fetchApi<StrapiResponse<Category[]>>({
  endpoint: "categories",
  query: { "populate": "posts" },
});

let categories = data.map((category) => ({
  name: category.name,
  slug: `/blog/category/${category.slug}/`,
  count: category.posts?.length || 0,
}));

const t = await useTranslations(Astro.currentLocale as string);

// Sort categories by count
categories = categories.sort((a, b) => b.count - a.count);
---

{
  categories && categories.length > 0 && (
    <div class="space-y-4">
      <h2 class="text-h5 border-border-default/50 mb-4 border-b pb-4">
        {t("widgets.categories_title")}
      </h2>
      <div>
        {categories.map((category) => (
          <div class="group/category relative flex items-center gap-4 py-1 first:pt-0 last:pb-0">
            <span class="group-hover/category:text-primary inline-block transition duration-300 group-hover/category:translate-x-1">
              <ReactIcon icon="IoIosArrowForward" />
            </span>
            <span
              class="group-hover/category:text-primary truncate transition duration-300"
              set:html={category.name}
            />
            <a
              href={category.slug}
              class="absolute inset-0"
              title={`Filter posts by ${category.name}`}
            />
            <div
              class="bg-theme-light group-hover/category:bg-primary/10 group-hover/category:text-primary ml-auto flex h-9 w-9 items-center justify-center rounded-full text-sm transition duration-300"
              set:html={category.count}
            />
          </div>
        ))}
      </div>
    </div>
  )
}
