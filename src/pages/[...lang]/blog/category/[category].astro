---
import Base from "@/layouts/Base.astro";
import PageHeader from "@/components/widgets/PageHeader.astro";
import CallToAction from "@/components/sections/CallToAction.astro";
import LayoutWrapper from "@/components/LayoutWrapper.astro";
import fetchApi from "@/lib/utils/fetchApi";
import type { StrapiResponse, Post, Category } from "@/types";
import resolveImageUrl from "@/lib/utils/resolveImageUrl";

export async function getStaticPaths() {
  const { data } = await fetchApi<StrapiResponse<Category[]>>({ endpoint: "categories" });
  const paths = data.map((cat) => ({
    params: { category: cat.slug },
    props: { category: { name: cat.name, slug: cat.slug } },
  }));
  return paths;
}

const { category } = Astro.props;

const { data } = await fetchApi<StrapiResponse<Post[]>>({
  endpoint: "posts",
  query: {
    "populate[coverImage][populate]": true,
    "populate[categories]": true,
    "populate[author][populate]": "avatar",
    populate: "categories",
    sort: "publishedAt:desc",
  },
});

const blogPosts = data.map((post) => ({
  data: {
    title: post.title,
    date: new Date(post.publishedAt).toLocaleDateString(Astro.currentLocale),
    image: resolveImageUrl(post.coverImage),
    categories: post.categories?.map((cat) => cat.name) || [],
    content: post.content,
    author: post.author?.name || "",
  },
  slug: post.slug,
  id: post.id,
}));
const title = `${category.name}`;
---

<Base title={title}>
  <PageHeader hiddenPaths={["Category"]} title={category.name} />
  <LayoutWrapper
    pageType="list"
    sidebar={{
      enable: true,
      sticky: true,
      position: "right",
    }}
    contentList={{
      items: blogPosts,
      options: { content: "blog", layout: "grid", gap: "gap-8", columns: 2 },
      filter: { category: category },
    }}
  />
  <CallToAction />
</Base>
